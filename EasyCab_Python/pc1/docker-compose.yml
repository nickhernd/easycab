services:
  zookeeper:
    image: confluentinc/cp-zookeeper:7.4.0
    ports:
      - "2181:2181"
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    networks:
      - easycab_shared_network

  kafka:
    image: confluentinc/cp-kafka:7.4.0
    ports:
      - "9094:9094"
      - "29092:29092"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: 'zookeeper:2181'
      KAFKA_LISTENERS: PLAINTEXT://0.0.0.0:29092,PLAINTEXT_HOST://0.0.0.0:9094
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:29092,PLAINTEXT_HOST://${KAFKA_IP}:9094
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_AUTO_CREATE_TOPICS_ENABLE: "true"
    depends_on:
      - zookeeper
    networks:
      - easycab_shared_network

  central:
    build:
      context: ..
      dockerfile: ./Central/Dockerfile
    ports:
      - "65432:65432"
    environment:
      - KAFKA_BROKER=kafka:29092
    command:
      - /bin/sh
      - -c
      - "sleep 10 && python3 /app/Central/EC_Central.py --listen_port 65432 --ip_port_broker kafka:29092"
    depends_on:
      - kafka
    networks:
      - easycab_shared_network

  front:
    build:
      context: ../
      dockerfile: ./WebVisualization/Dockerfile
    ports:
      - "8080:8080"
    volumes:
      - ../WebVisualization:/app/WebVisualization
    environment:
      KAFKA_BROKER: kafka:29092
    depends_on:
      kafka:
        condition: service_started
    command: >
      bash -c "python3 /app/WebVisualization/app.py"
    networks:
      - easycab_shared_network

  ws_server:
    build:
      context: ../
      dockerfile: ./WebVisualization/Dockerfile
    ports:
      - "8765:8765"
    expose:
      - "8766"
    volumes:
      - ../WebVisualization:/app/WebVisualization
    depends_on:
      - front
    command: >
      bash -c "python3 /app/WebVisualization/ws_server.py"
    networks:
      - easycab_shared_network

  kafka_to_file:
    build:
      context: ../
      dockerfile: ./WebVisualization/Dockerfile
    volumes:
      - ../WebVisualization:/app/WebVisualization
    environment:
      KAFKA_BROKER: kafka:29092
      WS_SERVER_HOST: ws_server
      WS_SERVER_PORT: 8766
    depends_on:
      - kafka
      - ws_server
    command: >
      bash -c "python3 /app/WebVisualization/kafka_to_file.py"
    networks:
      - easycab_shared_network

networks:
  easycab_shared_network:
    name: easycab_shared_network
    driver: bridge
